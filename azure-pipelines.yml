# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '0c62f9fc-80d0-4bdd-90ff-4f3b763f072e'
  
  # Web app name
  webAppName: 'udacity-techconf'

  # Function app name
  functionAppName: 'techconf-messanger'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'udacity-techconf'

  # Web App Project root folder. Point to the folder containing manage.py file.
  webAppProjectRoot: $(System.DefaultWorkingDirectory)/web

  # function Project root folder. Point to the folder containing manage.py file.
  functionProjectRoot: $(System.DefaultWorkingDirectory)/function
  
  # Python version: 3.7
  pythonVersion: '3.7'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - bash: |
        if [ -f extensions.csproj ]
        then
            dotnet build extensions.csproj --output ./bin
        fi
      displayName: 'Build extensions'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(webAppProjectRoot)
      displayName: "Install webApp requirements"

    - bash: |
        python -m venv worker_venv
        source worker_venv/bin/activate
        pip install setuptools
        pip install -r requirements.txt
      workingDirectory: $(functionProjectRoot)
      displayName: 'Install function requirements'

    - task: ArchiveFiles@2
      displayName: 'Archive wb files'
      inputs:
        rootFolderOrFile: '$(webAppProjectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)web.zip
        replaceExistingArchive: true
   
    - task: ArchiveFiles@2
      displayName: 'Archive function files'
      inputs:
        rootFolderOrFile: '$(functionProjectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)function.zip
        replaceExistingArchive: true


    - upload: $(Build.ArtifactStagingDirectory)/
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : udacity-techconf'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId)web.zip
          
          - task: AzureFunctionApp@1
            displayName: 'Azure Function App Deploy'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appType: functionAppLinux
              appName: $(functionAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId)function.zip